name: Release

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Release'
        required: true
        default: '...no release'
        type: choice
        options:
          - '...no release'
          - major
          - minor
          - patch

jobs:
  precheck:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Version
        id: vars
        shell: bash
        run: |
          VERSION=${{ github.event.inputs.version }}
          ./gradlew -PnewVersion=$VERSION setVersion
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub"
          git commit -a -m "Releasing version $VERSION"
          git push origin main

  release:
    needs: precheck
    runs-on: ubuntu-latest
    env:
      JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
      JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
      JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
      JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
      JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_USERNAME }}
      JRELEASER_MAVENCENTRAL_TOKEN: ${{ secrets.JRELEASER_MAVENCENTRAL_TOKEN }}
      USERNAME: ${{ secrets.USERNAME }}
      TOKEN: ${{ secrets.TOKEN }}
    steps:
      - uses: ./.github/workflows/callable.build.yml

      - name: Assemble
        uses: jreleaser/release-action@v2
        with:
          arguments: assemble

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          arguments: full-release